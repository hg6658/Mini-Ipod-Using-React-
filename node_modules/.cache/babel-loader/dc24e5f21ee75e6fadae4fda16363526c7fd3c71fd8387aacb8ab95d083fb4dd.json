{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91639\\\\OneDrive\\\\Desktop\\\\Mini Ipod Using React\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport LowerPanel from './LowerPanel';\nimport UpperPanel from './UpperPanel';\nimport ZingTouch from 'zingtouch';\nimport wallpapers from './assets/wallpapers/wallpaper';\nimport song1 from './assets/Songs/Song1/song1';\nimport song2 from './assets/Songs/Song2/song2';\nimport song3 from './assets/Songs/Song3/song3';\nimport aw from './assets/artistsPics/alanWalker.jpg';\nimport kp from './assets/artistsPics/katyPerry.jpg';\nimport mt from './assets/artistsPics/monoirThrace.jpg';\n/* \r\n\r\nIt is the main component of the app where state is defined..\r\n\r\n\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.rotableRef = /*#__PURE__*/React.createRef(); // captured the dom element of the white circle in ipod app.\n    this.myRegion = undefined; // these two variable are going to be initialized using z touch.\n    this.rotateGesture = undefined;\n    this.onscreen = this.onscreen.bind(this); // this function is run when middle circle button is tapped\n    this.offscreen = this.offscreen.bind(this); // this function is run when menu button is tapped\n    this.changeWallpaper = this.changeWallpaper.bind(this); // this function is run when change wallpaper option is tapped\n    this.openSong = this.openSong.bind(this); // this function is run when all song option is tapped\n    this.forward = this.forward.bind(this); // this function is run when forward button is tapped\n    this.backward = this.backward.bind(this); // this function is run when backward button is tapped\n    this.openAlbums = this.openAlbums.bind(this); // this function is run when album option is tapped\n    this.openArtists = this.openArtists.bind(this); // this function is run when artist button is tapped\n    this.state = {\n      optionIndex: 0,\n      // to check which option in menu or submenu is currently selected\n      isMenuVisible: false,\n      //is menu is currently opened\n      isSettingsVisible: false,\n      //is setting menu is currently visible \n      isMusicVisible: false,\n      //is music menu is currently visible\n      isMainMenuVisible: true,\n      // is main menu is currently visible\n      wallpaper: wallpapers.wallpaper2,\n      // which wallpaper is currently selected\n      wallpapersIndex: 2,\n      // index of wallpaper in the array\n      isScreen: {\n        isDesktop: true,\n        // is Main screen is currently visible\n        isSong: false,\n        // is song screen is currently visible\n        isAlbum: false,\n        // is album screen is currently visible\n        isArtist: false,\n        // is artist screen is currently visible\n        isGame: false,\n        // is game screen is currently visible\n        isCoverFlow: false // is coverflow screen is currently visible\n      },\n\n      albums: {\n        // all album's album arts and albumIndex to see which is currently selected\n        arts: [song1.albumArt, song2.albumArt, song3.albumArt],\n        albumIndex: 0\n      },\n      artists: {\n        // all artist's images and artistIndex to see which is currently selected\n        arts: [aw, kp, mt],\n        artistIndex: 0\n      },\n      song: {\n        // complete information about songs\n        songFiles: [song1.song, song2.song, song3.song],\n        // all song files\n        albumArts: [song1.albumArt, song2.albumArt, song3.albumArt],\n        // all song's album arts\n        songIndex: 0,\n        //which song is selscted\n        songNames: ['Faded', 'Sugar & Brownies', 'Harleys In Hawaii'],\n        // name of song\n        isPlaying: false,\n        // currently is song is playing or not\n        songElement: undefined // it will contain audio element of current song\n      }\n    };\n  }\n\n  componentDidMount() {\n    // on mounting phase rotation gesture is activated using zing touch library\n    this.myRegion = new ZingTouch.Region(this.rotableRef.current);\n    this.rotateGesture = new ZingTouch.Rotate();\n    this.rotation();\n  }\n  offscreen() {\n    let {\n      isMenuVisible,\n      isSettingsVisible,\n      isMusicVisible,\n      isMainMenuVisible,\n      isScreen,\n      song\n    } = this.state;\n    if (song.isPlaying) {\n      song.songElement.pause();\n      song.isPlaying = false;\n      this.setState({\n        song\n      });\n      this.setState({\n        isScreen: {\n          isDesktop: true,\n          isSong: false,\n          isAlbum: false,\n          isArtist: false,\n          isGame: false,\n          isCoverFlow: false\n        }\n      });\n      return;\n    }\n    if (isScreen.isSong) {\n      if (song.isPlaying) this.onscreen();\n      this.setState({\n        isScreen: {\n          isDesktop: true,\n          isSong: false,\n          isAlbum: false,\n          isArtist: false,\n          isGame: false,\n          isCoverFlow: false\n        }\n      });\n      return;\n    }\n    if (isScreen.isArtist || isScreen.isAlbum || isScreen.isGame || isScreen.isCoverFlow) {\n      this.setState({\n        isScreen: {\n          isDesktop: true,\n          isSong: false,\n          isAlbum: false,\n          isArtist: false,\n          isGame: false,\n          isCoverFlow: false\n        }\n      });\n      return;\n    }\n    if (isMenuVisible && !isSettingsVisible && !isMusicVisible) {\n      isMenuVisible = !isMenuVisible;\n    } else if (isMenuVisible && isSettingsVisible && !isMusicVisible) {\n      isSettingsVisible = !isSettingsVisible;\n    } else if (isMenuVisible && !isSettingsVisible && isMusicVisible) {\n      isMusicVisible = !isMusicVisible;\n    } else {\n      isMenuVisible = !isMenuVisible;\n    }\n    if (!isSettingsVisible && !isMusicVisible) {\n      isMainMenuVisible = true;\n    }\n    this.setState({\n      isMenuVisible,\n      isSettingsVisible,\n      isMusicVisible,\n      isMainMenuVisible,\n      song\n    });\n  }\n  changeWallpaper() {\n    let {\n      wallpaper,\n      wallpaperIndex\n    } = this.state;\n    if (wallpaper == wallpapers.wallpaper1) {\n      wallpaper = wallpapers.wallpaper2;\n      wallpaperIndex = 2;\n    } else if (wallpaper == wallpapers.wallpaper2) {\n      wallpaper = wallpapers.wallpaper3;\n      wallpaperIndex = 3;\n    } else if (wallpaper == wallpapers.wallpaper3) {\n      wallpaper = wallpapers.wallpaper4;\n      wallpaperIndex = 4;\n    } else if (wallpaper == wallpapers.wallpaper4) {\n      wallpaper = wallpapers.wallpaper1;\n      wallpaperIndex = 1;\n    }\n    this.setState({\n      wallpaper,\n      wallpaperIndex\n    });\n  }\n  changeTheme() {\n    console.log('Theme Changed');\n  }\n  rotation() {\n    let optionIndex = 0;\n    let self = this;\n    this.myRegion.bind(this.rotableRef.current, this.rotateGesture, function (e) {\n      let angle = e.detail.angle;\n      if (angle >= 0 && angle < 90) {\n        optionIndex = 1;\n      } else if (angle >= 90 && angle < 180) {\n        optionIndex = 4;\n      } else if (angle >= 180 && angle < 270) {\n        optionIndex = 3;\n      } else if (angle >= 270 && angle < 359) {\n        optionIndex = 2;\n      } else if (angle >= -90 && angle < 0) {\n        optionIndex = 2;\n      } else if (angle >= -180 && angle < -90) {\n        optionIndex = 3;\n      } else if (angle >= -270 && angle < -180) {\n        optionIndex = 4;\n      } else if (angle >= -350 && angle < -270) {\n        optionIndex = 1;\n      }\n      self.setState({\n        optionIndex\n      });\n    });\n  }\n  openSong() {\n    let {\n      song\n    } = this.state;\n    var songToplay = new Audio(song.songFiles[song.songIndex]);\n    songToplay.play();\n    song.isPlaying = true;\n    song.songElement = songToplay;\n    this.setState({\n      isPlaying: true,\n      isScreen: {\n        isDesktop: false,\n        isSong: true\n      },\n      song\n    });\n  }\n  openArtists() {\n    this.setState({\n      isScreen: {\n        isDesktop: false,\n        isSong: false,\n        isAlbum: false,\n        isArtist: true,\n        isGame: false,\n        isCoverFlow: false\n      }\n    });\n  }\n  openAlbums() {\n    this.setState({\n      isScreen: {\n        isDesktop: false,\n        isSong: false,\n        isAlbum: true,\n        isArtist: false,\n        isGame: false,\n        isCoverFlow: false\n      }\n    });\n  }\n  openGame() {\n    this.setState({\n      isScreen: {\n        isDesktop: false,\n        isSong: false,\n        isAlbum: false,\n        isArtist: false,\n        isGame: true,\n        isCoverFlow: false\n      }\n    });\n  }\n  openCoverFlow() {\n    this.setState({\n      isScreen: {\n        isDesktop: false,\n        isSong: false,\n        isAlbum: false,\n        isArtist: false,\n        isGame: false,\n        isCoverFlow: true\n      }\n    });\n  }\n  onscreen() {\n    let {\n      optionIndex,\n      isMenuVisible,\n      isSettingsVisible,\n      isMusicVisible,\n      isMainMenuVisible,\n      isScreen,\n      song\n    } = this.state;\n    if (isScreen.isSong) {\n      if (song.songElement) {\n        if (song.songElement.paused) {\n          song.songElement.play();\n          song.isPlaying = true;\n        } else {\n          song.songElement.pause();\n          song.isPlaying = false;\n        }\n        this.setState({\n          song\n        });\n        return;\n      }\n    }\n    if (isMenuVisible) {\n      if (isSettingsVisible) {\n        if (optionIndex == 1) {\n          this.changeWallpaper();\n          this.setState({\n            isMenuVisible,\n            isSettingsVisible,\n            isMusicVisible,\n            isMainMenuVisible\n          });\n          return;\n        }\n        if (optionIndex == 2) {\n          this.changeTheme();\n          this.setState({\n            isMenuVisible,\n            isSettingsVisible,\n            isMusicVisible,\n            isMainMenuVisible\n          });\n          return;\n        }\n      }\n      if (isMusicVisible) {\n        if (optionIndex == 1) {\n          isMenuVisible = !isMenuVisible;\n          isMusicVisible = !isMusicVisible;\n          this.openSong();\n          this.setState({\n            isMenuVisible,\n            isSettingsVisible,\n            isMusicVisible,\n            isMainMenuVisible\n          });\n          return;\n        } else if (optionIndex == 2) {\n          isMenuVisible = !isMenuVisible;\n          isMusicVisible = !isMusicVisible;\n          this.openArtists();\n          this.setState({\n            isMenuVisible,\n            isSettingsVisible,\n            isMusicVisible,\n            isMainMenuVisible\n          });\n          return;\n        } else if (optionIndex == 3) {\n          isMenuVisible = !isMenuVisible;\n          isMusicVisible = !isMusicVisible;\n          this.openAlbums();\n          this.setState({\n            isMenuVisible,\n            isSettingsVisible,\n            isMusicVisible,\n            isMainMenuVisible\n          });\n          return;\n        }\n      }\n      if (optionIndex == 4) {\n        if (!isSettingsVisible) {\n          isSettingsVisible = !isSettingsVisible;\n        }\n      } else if (optionIndex == 2) {\n        if (!isMusicVisible) {\n          isMusicVisible = !isMusicVisible;\n        }\n      } else if (optionIndex == 3) {\n        isMenuVisible = !isMenuVisible;\n        isMainMenuVisible = true;\n        this.openGame();\n        this.setState({\n          isMenuVisible,\n          isSettingsVisible,\n          isMusicVisible,\n          isMainMenuVisible\n        });\n      } else if (optionIndex == 1) {\n        isMenuVisible = !isMenuVisible;\n        this.openCoverFlow();\n        this.setState({\n          isMenuVisible,\n          isSettingsVisible,\n          isMusicVisible,\n          isMainMenuVisible\n        });\n      }\n    } else {\n      isMenuVisible = false;\n    }\n    if (isSettingsVisible || isMusicVisible) {\n      isMainMenuVisible = false;\n    }\n    this.setState({\n      isMenuVisible,\n      isSettingsVisible,\n      isMusicVisible,\n      isMainMenuVisible\n    });\n  }\n  forward() {\n    let {\n      isScreen,\n      song,\n      albums,\n      artists\n    } = this.state;\n    if (isScreen.isSong) {\n      song.songIndex++;\n      song.songIndex = song.songIndex % song.songFiles.length;\n      if (song.songElement) song.songElement.pause();\n      this.openSong();\n    } else if (isScreen.isAlbum) {\n      albums.albumIndex++;\n      albums.albumIndex = albums.albumIndex % albums.arts.length;\n      this.openAlbums();\n    } else if (isScreen.isArtist) {\n      artists.artistIndex++;\n      artists.artistIndex = artists.artistIndex % artists.arts.length;\n      this.openArtists();\n    }\n  }\n  backward() {\n    let {\n      isScreen,\n      song,\n      albums,\n      artists\n    } = this.state;\n    if (isScreen.isSong) {\n      song.songIndex--;\n      if (song.songIndex < 0) song.songIndex = song.songFiles.length - 1;\n      if (song.songElement) song.songElement.pause();\n      this.openSong();\n    } else if (isScreen.isAlbum) {\n      albums.albumIndex--;\n      if (albums.albumIndex < 0) albums.albumIndex = albums.arts.length - 1;\n      this.openAlbums();\n    } else if (isScreen.isArtist) {\n      artists.artistIndex--;\n      if (artists.artistIndex < 0) artists.artistIndex = artists.arts.length - 1;\n      this.openArtists();\n    }\n  }\n  render() {\n    var {\n      optionIndex,\n      isMenuVisible,\n      isSettingsVisible,\n      isMusicVisible,\n      isMainMenuVisible,\n      wallpaper,\n      isScreen,\n      song,\n      albums,\n      artists\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"directions\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click on menu to open menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click grey button on center to select an option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click and drag white circle clockwise or anit clockwise round th radius to navigate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(UpperPanel, {\n          optionIndex: optionIndex,\n          isMenuVisible: isMenuVisible,\n          isSettingsVisible: isSettingsVisible,\n          isMusicVisible: isMusicVisible,\n          isMainMenuVisible: isMainMenuVisible,\n          wallpaper: wallpaper,\n          isScreen: isScreen,\n          song: song,\n          albums: albums,\n          artists: artists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LowerPanel, {\n          rotableRef: this.rotableRef,\n          onscreen: this.onscreen,\n          offscreen: this.offscreen,\n          pushedforward: this.forward,\n          pushedbackward: this.backward\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","LowerPanel","UpperPanel","ZingTouch","wallpapers","song1","song2","song3","aw","kp","mt","App","Component","constructor","rotableRef","createRef","myRegion","undefined","rotateGesture","onscreen","bind","offscreen","changeWallpaper","openSong","forward","backward","openAlbums","openArtists","state","optionIndex","isMenuVisible","isSettingsVisible","isMusicVisible","isMainMenuVisible","wallpaper","wallpaper2","wallpapersIndex","isScreen","isDesktop","isSong","isAlbum","isArtist","isGame","isCoverFlow","albums","arts","albumArt","albumIndex","artists","artistIndex","song","songFiles","albumArts","songIndex","songNames","isPlaying","songElement","componentDidMount","Region","current","Rotate","rotation","pause","setState","wallpaperIndex","wallpaper1","wallpaper3","wallpaper4","changeTheme","console","log","self","e","angle","detail","songToplay","Audio","play","openGame","openCoverFlow","paused","length","render"],"sources":["C:/Users/91639/OneDrive/Desktop/Mini Ipod Using React/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React from 'react';\r\nimport LowerPanel from './LowerPanel';\r\nimport UpperPanel from './UpperPanel';\r\nimport ZingTouch from 'zingtouch';\r\nimport wallpapers from './assets/wallpapers/wallpaper';\r\nimport song1 from './assets/Songs/Song1/song1';\r\nimport song2 from './assets/Songs/Song2/song2';\r\nimport song3 from './assets/Songs/Song3/song3';\r\nimport aw from './assets/artistsPics/alanWalker.jpg';\r\nimport kp from './assets/artistsPics/katyPerry.jpg';\r\nimport mt from './assets/artistsPics/monoirThrace.jpg';\r\n/* \r\n\r\nIt is the main component of the app where state is defined..\r\n\r\n\r\n*/\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.rotableRef = React.createRef();  // captured the dom element of the white circle in ipod app.\r\n    this.myRegion = undefined;      // these two variable are going to be initialized using z touch.\r\n    this.rotateGesture = undefined; \r\n    this.onscreen = this.onscreen.bind(this); // this function is run when middle circle button is tapped\r\n    this.offscreen = this.offscreen.bind(this); // this function is run when menu button is tapped\r\n    this.changeWallpaper = this.changeWallpaper.bind(this); // this function is run when change wallpaper option is tapped\r\n    this.openSong = this.openSong.bind(this); // this function is run when all song option is tapped\r\n    this.forward = this.forward.bind(this);   // this function is run when forward button is tapped\r\n    this.backward = this.backward.bind(this); // this function is run when backward button is tapped\r\n    this.openAlbums = this.openAlbums.bind(this); // this function is run when album option is tapped\r\n    this.openArtists = this.openArtists.bind(this); // this function is run when artist button is tapped\r\n    this.state={\r\n      optionIndex:0,        // to check which option in menu or submenu is currently selected\r\n      isMenuVisible: false, //is menu is currently opened\r\n      isSettingsVisible: false, //is setting menu is currently visible \r\n      isMusicVisible: false,  //is music menu is currently visible\r\n      isMainMenuVisible: true, // is main menu is currently visible\r\n      wallpaper:wallpapers.wallpaper2, // which wallpaper is currently selected\r\n      wallpapersIndex:2,         // index of wallpaper in the array\r\n      isScreen:{\r\n        isDesktop:true,     // is Main screen is currently visible\r\n        isSong: false,      // is song screen is currently visible\r\n        isAlbum: false,     // is album screen is currently visible\r\n        isArtist: false,    // is artist screen is currently visible\r\n        isGame: false,      // is game screen is currently visible\r\n        isCoverFlow: false  // is coverflow screen is currently visible\r\n      },\r\n      albums:{ // all album's album arts and albumIndex to see which is currently selected\r\n        arts:[song1.albumArt,song2.albumArt,song3.albumArt],\r\n        albumIndex: 0\r\n      },\r\n      artists:{ // all artist's images and artistIndex to see which is currently selected\r\n        arts:[aw,kp,mt],\r\n        artistIndex: 0\r\n      },\r\n      song:{ // complete information about songs\r\n        songFiles:[song1.song,song2.song,song3.song], // all song files\r\n        albumArts:[song1.albumArt,song2.albumArt,song3.albumArt], // all song's album arts\r\n        songIndex: 0, //which song is selscted\r\n        songNames:['Faded','Sugar & Brownies','Harleys In Hawaii'], // name of song\r\n        isPlaying: false, // currently is song is playing or not\r\n        songElement: undefined // it will contain audio element of current song\r\n      }\r\n    };\r\n\r\n  }\r\n  componentDidMount(){ // on mounting phase rotation gesture is activated using zing touch library\r\n    this.myRegion = new ZingTouch.Region(this.rotableRef.current);\r\n    this.rotateGesture = new ZingTouch.Rotate();\r\n    this.rotation();\r\n  }\r\n  offscreen(){\r\n\r\n\r\n\r\n    let {\r\n      isMenuVisible,\r\n      isSettingsVisible,\r\n      isMusicVisible,\r\n      isMainMenuVisible,\r\n      isScreen,song\r\n    } = this.state;\r\n    if(song.isPlaying){\r\n      song.songElement.pause();\r\n      song.isPlaying = false;\r\n      this.setState({song});\r\n      this.setState({\r\n        isScreen:{\r\n          isDesktop:true,\r\n          isSong: false,\r\n          isAlbum: false,\r\n          isArtist: false,\r\n          isGame: false,\r\n          isCoverFlow: false\r\n        }\r\n      })\r\n      return;\r\n    }\r\n    if(isScreen.isSong){\r\n      if(song.isPlaying)this.onscreen();\r\n      this.setState({\r\n        isScreen:{\r\n          isDesktop:true,\r\n          isSong: false,\r\n          isAlbum: false,\r\n          isArtist: false,\r\n          isGame: false,\r\n          isCoverFlow: false\r\n        }\r\n      })\r\n      return;\r\n    }\r\n\r\n    if(isScreen.isArtist || isScreen.isAlbum || isScreen.isGame || isScreen.isCoverFlow) {\r\n      this.setState({\r\n        isScreen:{\r\n          isDesktop:true,\r\n          isSong: false,\r\n          isAlbum: false,\r\n          isArtist: false,\r\n          isGame: false,\r\n          isCoverFlow: false\r\n        }\r\n      })\r\n      return;\r\n    }\r\n\r\n    if(isMenuVisible && !isSettingsVisible && !isMusicVisible){\r\n      isMenuVisible = !isMenuVisible;\r\n    }else if(isMenuVisible && isSettingsVisible && !isMusicVisible){\r\n      isSettingsVisible = !isSettingsVisible;\r\n    }else if(isMenuVisible && !isSettingsVisible && isMusicVisible){\r\n      isMusicVisible = !isMusicVisible;\r\n    }else{\r\n      isMenuVisible = !isMenuVisible;\r\n    }\r\n\r\n    if(!isSettingsVisible && !isMusicVisible){\r\n      isMainMenuVisible = true;\r\n    }\r\n\r\n    this.setState({\r\n      isMenuVisible,\r\n      isSettingsVisible,\r\n      isMusicVisible,\r\n      isMainMenuVisible,song\r\n    });\r\n\r\n  }\r\n\r\n  changeWallpaper(){\r\n    let {wallpaper,wallpaperIndex} = this.state;\r\n    if(wallpaper==wallpapers.wallpaper1){\r\n      wallpaper = wallpapers.wallpaper2;\r\n      wallpaperIndex = 2;\r\n    }\r\n    else if(wallpaper==wallpapers.wallpaper2){\r\n      wallpaper = wallpapers.wallpaper3;\r\n      wallpaperIndex = 3;\r\n    }\r\n    else if(wallpaper==wallpapers.wallpaper3){\r\n      wallpaper = wallpapers.wallpaper4;\r\n      wallpaperIndex = 4;\r\n    }\r\n    else if(wallpaper==wallpapers.wallpaper4){\r\n      wallpaper = wallpapers.wallpaper1;\r\n      wallpaperIndex = 1;\r\n    }\r\n    this.setState({wallpaper,wallpaperIndex});\r\n  }\r\n\r\n  changeTheme(){\r\n    console.log('Theme Changed');\r\n  }\r\n  rotation(){\r\n    let optionIndex = 0;\r\n    let self = this;\r\n    this.myRegion.bind(this.rotableRef.current, this.rotateGesture, function(e){\r\n      let angle = e.detail.angle;\r\n      if(angle >=0 && angle <90){\r\n        optionIndex = 1;\r\n      }else if(angle>=90 && angle<180){\r\n        optionIndex = 4;\r\n      }else if(angle>=180 && angle<270){\r\n        optionIndex = 3;\r\n      }else if(angle>=270 && angle<359){\r\n        optionIndex = 2;\r\n      }else if(angle>=-90 && angle<0){\r\n        optionIndex = 2;\r\n      }else if(angle>=-180 && angle<-90){\r\n        optionIndex = 3;\r\n      }else if(angle>=-270 && angle<-180){\r\n        optionIndex = 4;\r\n      }else if(angle>=-350 && angle<-270){\r\n        optionIndex = 1;\r\n      }\r\n      self.setState({optionIndex});\r\n    });\r\n  }\r\n\r\n  openSong(){\r\n    let {song} = this.state;\r\n    var songToplay = new Audio(song.songFiles[song.songIndex]);\r\n    songToplay.play();\r\n    song.isPlaying = true;\r\n    song.songElement = songToplay;\r\n    this.setState({\r\n      isPlaying: true,\r\n      isScreen:{\r\n        isDesktop: false,\r\n        isSong: true,\r\n      },\r\n      song\r\n    });\r\n  }\r\n\r\n  openArtists(){\r\n    this.setState({\r\n      isScreen:{\r\n        isDesktop:false,\r\n        isSong: false,\r\n        isAlbum: false,\r\n        isArtist: true,\r\n        isGame: false,\r\n        isCoverFlow: false\r\n      }\r\n    })\r\n  }\r\n\r\n  openAlbums(){\r\n    this.setState({\r\n      isScreen:{\r\n        isDesktop:false,\r\n        isSong: false,\r\n        isAlbum: true,\r\n        isArtist: false,\r\n        isGame: false,\r\n        isCoverFlow: false\r\n      }\r\n    })\r\n  }\r\n\r\n  openGame(){\r\n    this.setState({\r\n      isScreen:{\r\n        isDesktop:false,\r\n        isSong: false,\r\n        isAlbum: false,\r\n        isArtist: false,\r\n        isGame: true,\r\n        isCoverFlow: false\r\n      }\r\n    })\r\n  }\r\n\r\n  openCoverFlow(){\r\n    this.setState({\r\n      isScreen:{\r\n        isDesktop:false,\r\n        isSong: false,\r\n        isAlbum: false,\r\n        isArtist: false,\r\n        isGame: false,\r\n        isCoverFlow: true\r\n      }\r\n    })\r\n  }\r\n\r\n  onscreen(){\r\n    let {\r\n      optionIndex,\r\n      isMenuVisible,\r\n      isSettingsVisible,\r\n      isMusicVisible,\r\n      isMainMenuVisible,\r\n      isScreen,song\r\n    } = this.state;\r\n    if(isScreen.isSong){\r\n      if(song.songElement){\r\n        if(song.songElement.paused){\r\n          song.songElement.play();\r\n          song.isPlaying = true;\r\n        }else{\r\n          song.songElement.pause();\r\n          song.isPlaying = false;\r\n        }\r\n        this.setState({song});\r\n        return;\r\n      }\r\n    }\r\n    if(isMenuVisible){\r\n      if(isSettingsVisible){\r\n        if(optionIndex==1){\r\n          this.changeWallpaper();\r\n          this.setState({\r\n            isMenuVisible,\r\n            isSettingsVisible,\r\n            isMusicVisible,\r\n            isMainMenuVisible\r\n          });\r\n          return;\r\n        }\r\n        if(optionIndex==2){\r\n          this.changeTheme();\r\n          this.setState({\r\n            isMenuVisible,\r\n            isSettingsVisible,\r\n            isMusicVisible,\r\n            isMainMenuVisible\r\n          });\r\n          return ;\r\n        }\r\n      }\r\n\r\n      if(isMusicVisible){\r\n        if(optionIndex==1){\r\n          isMenuVisible = !isMenuVisible;\r\n          isMusicVisible = !isMusicVisible;\r\n          this.openSong();\r\n          this.setState({\r\n            isMenuVisible,\r\n            isSettingsVisible,\r\n            isMusicVisible,\r\n            isMainMenuVisible\r\n          });\r\n          return;\r\n        }\r\n        else if(optionIndex==2){\r\n          isMenuVisible = !isMenuVisible;\r\n          isMusicVisible = !isMusicVisible;\r\n          this.openArtists();\r\n          this.setState({\r\n            isMenuVisible,\r\n            isSettingsVisible,\r\n            isMusicVisible,\r\n            isMainMenuVisible\r\n          });\r\n          return;\r\n        }\r\n        else if(optionIndex==3){\r\n          isMenuVisible = !isMenuVisible;\r\n          isMusicVisible = !isMusicVisible;\r\n          this.openAlbums();\r\n          this.setState({\r\n            isMenuVisible,\r\n            isSettingsVisible,\r\n            isMusicVisible,\r\n            isMainMenuVisible\r\n          });\r\n          return;\r\n        }\r\n      }\r\n\r\n      if(optionIndex==4){\r\n        if(!isSettingsVisible){\r\n          isSettingsVisible = !isSettingsVisible;\r\n        }\r\n      }\r\n      else if(optionIndex== 2){\r\n        if(!isMusicVisible){\r\n          isMusicVisible = !isMusicVisible;\r\n        }\r\n      }\r\n      else if(optionIndex== 3){\r\n        isMenuVisible = !isMenuVisible;  \r\n        isMainMenuVisible = true;\r\n        this.openGame();\r\n        this.setState({\r\n          isMenuVisible,\r\n          isSettingsVisible,\r\n          isMusicVisible,\r\n          isMainMenuVisible\r\n        });\r\n      } \r\n\r\n      else if(optionIndex==1){\r\n        isMenuVisible = !isMenuVisible;\r\n        this.openCoverFlow();\r\n        this.setState({\r\n          isMenuVisible,\r\n          isSettingsVisible,\r\n          isMusicVisible,\r\n          isMainMenuVisible\r\n        });\r\n      }\r\n    }else{\r\n      isMenuVisible = false;\r\n    }\r\n    if(isSettingsVisible || isMusicVisible){\r\n      isMainMenuVisible = false;\r\n    }\r\n    this.setState({\r\n      isMenuVisible,\r\n      isSettingsVisible,\r\n      isMusicVisible,\r\n      isMainMenuVisible\r\n    });\r\n  }\r\n\r\n  forward(){\r\n    let {isScreen,song,albums,artists} = this.state;\r\n    if(isScreen.isSong){\r\n      song.songIndex++;\r\n      song.songIndex = song.songIndex% song.songFiles.length;\r\n      if(song.songElement)song.songElement.pause();\r\n      this.openSong();\r\n    }else if(isScreen.isAlbum){\r\n      albums.albumIndex++;\r\n      albums.albumIndex = albums.albumIndex% albums.arts.length;\r\n      this.openAlbums();\r\n    }else if(isScreen.isArtist){\r\n      artists.artistIndex++;\r\n      artists.artistIndex = artists.artistIndex% artists.arts.length;\r\n      this.openArtists();\r\n    }\r\n\r\n  }\r\n  backward(){\r\n    let {isScreen,song,albums,artists} = this.state;\r\n    if(isScreen.isSong){\r\n      song.songIndex--;\r\n      if(song.songIndex<0)song.songIndex =song.songFiles.length-1;\r\n      if(song.songElement)song.songElement.pause();\r\n      this.openSong();\r\n    }else if(isScreen.isAlbum){\r\n      albums.albumIndex--;\r\n      if(albums.albumIndex<0)albums.albumIndex = albums.arts.length-1;\r\n      this.openAlbums();\r\n    }else if(isScreen.isArtist){\r\n      artists.artistIndex--;\r\n      if(artists.artistIndex<0)artists.artistIndex = artists.arts.length-1;\r\n      this.openArtists();\r\n    }\r\n  }\r\n\r\n  render(){\r\n      var {\r\n        optionIndex,\r\n        isMenuVisible,\r\n        isSettingsVisible,\r\n        isMusicVisible,\r\n        isMainMenuVisible,\r\n        wallpaper,isScreen,song,albums,artists\r\n      } = this.state;\r\n      return (\r\n        <>\r\n        <div className=\"directions\">\r\n          <ul>\r\n            <li>Click on menu to open menu</li>\r\n            <li>Click grey button on center to select an option</li>\r\n            <li>Click and drag white circle clockwise or anit clockwise round th radius to navigate</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"App\">\r\n          <UpperPanel optionIndex={optionIndex}\r\n           isMenuVisible={isMenuVisible} \r\n           isSettingsVisible={isSettingsVisible} \r\n           isMusicVisible={isMusicVisible} \r\n           isMainMenuVisible={isMainMenuVisible}\r\n           wallpaper={wallpaper}\r\n           isScreen = {isScreen}\r\n           song={song}\r\n           albums={albums}\r\n           artists={artists}/>\r\n          <LowerPanel rotableRef={this.rotableRef} \r\n          onscreen={this.onscreen} \r\n          offscreen={this.offscreen}\r\n          pushedforward={this.forward}\r\n          pushedbackward={this.backward}/>\r\n        </div>\r\n        </>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,UAAU,MAAM,+BAA+B;AACtD,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,EAAE,MAAM,qCAAqC;AACpD,OAAOC,EAAE,MAAM,oCAAoC;AACnD,OAAOC,EAAE,MAAM,uCAAuC;AACtD;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAMA,MAAMC,GAAG,SAASX,KAAK,CAACY,SAAS,CAAC;EAChCC,WAAW,GAAE;IACX,KAAK,EAAE;IACP,IAAI,CAACC,UAAU,gBAAGd,KAAK,CAACe,SAAS,EAAE,CAAC,CAAE;IACtC,IAAI,CAACC,QAAQ,GAAGC,SAAS,CAAC,CAAM;IAChC,IAAI,CAACC,aAAa,GAAGD,SAAS;IAC9B,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5C,IAAI,CAACE,eAAe,GAAG,IAAI,CAACA,eAAe,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACxD,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACH,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACI,OAAO,GAAG,IAAI,CAACA,OAAO,CAACJ,IAAI,CAAC,IAAI,CAAC,CAAC,CAAG;IAC1C,IAAI,CAACK,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACL,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACM,UAAU,GAAG,IAAI,CAACA,UAAU,CAACN,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9C,IAAI,CAACO,WAAW,GAAG,IAAI,CAACA,WAAW,CAACP,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChD,IAAI,CAACQ,KAAK,GAAC;MACTC,WAAW,EAAC,CAAC;MAAS;MACtBC,aAAa,EAAE,KAAK;MAAE;MACtBC,iBAAiB,EAAE,KAAK;MAAE;MAC1BC,cAAc,EAAE,KAAK;MAAG;MACxBC,iBAAiB,EAAE,IAAI;MAAE;MACzBC,SAAS,EAAC9B,UAAU,CAAC+B,UAAU;MAAE;MACjCC,eAAe,EAAC,CAAC;MAAU;MAC3BC,QAAQ,EAAC;QACPC,SAAS,EAAC,IAAI;QAAM;QACpBC,MAAM,EAAE,KAAK;QAAO;QACpBC,OAAO,EAAE,KAAK;QAAM;QACpBC,QAAQ,EAAE,KAAK;QAAK;QACpBC,MAAM,EAAE,KAAK;QAAO;QACpBC,WAAW,EAAE,KAAK,CAAE;MACtB,CAAC;;MACDC,MAAM,EAAC;QAAE;QACPC,IAAI,EAAC,CAACxC,KAAK,CAACyC,QAAQ,EAACxC,KAAK,CAACwC,QAAQ,EAACvC,KAAK,CAACuC,QAAQ,CAAC;QACnDC,UAAU,EAAE;MACd,CAAC;MACDC,OAAO,EAAC;QAAE;QACRH,IAAI,EAAC,CAACrC,EAAE,EAACC,EAAE,EAACC,EAAE,CAAC;QACfuC,WAAW,EAAE;MACf,CAAC;MACDC,IAAI,EAAC;QAAE;QACLC,SAAS,EAAC,CAAC9C,KAAK,CAAC6C,IAAI,EAAC5C,KAAK,CAAC4C,IAAI,EAAC3C,KAAK,CAAC2C,IAAI,CAAC;QAAE;QAC9CE,SAAS,EAAC,CAAC/C,KAAK,CAACyC,QAAQ,EAACxC,KAAK,CAACwC,QAAQ,EAACvC,KAAK,CAACuC,QAAQ,CAAC;QAAE;QAC1DO,SAAS,EAAE,CAAC;QAAE;QACdC,SAAS,EAAC,CAAC,OAAO,EAAC,kBAAkB,EAAC,mBAAmB,CAAC;QAAE;QAC5DC,SAAS,EAAE,KAAK;QAAE;QAClBC,WAAW,EAAEvC,SAAS,CAAC;MACzB;IACF,CAAC;EAEH;;EACAwC,iBAAiB,GAAE;IAAE;IACnB,IAAI,CAACzC,QAAQ,GAAG,IAAIb,SAAS,CAACuD,MAAM,CAAC,IAAI,CAAC5C,UAAU,CAAC6C,OAAO,CAAC;IAC7D,IAAI,CAACzC,aAAa,GAAG,IAAIf,SAAS,CAACyD,MAAM,EAAE;IAC3C,IAAI,CAACC,QAAQ,EAAE;EACjB;EACAxC,SAAS,GAAE;IAIT,IAAI;MACFS,aAAa;MACbC,iBAAiB;MACjBC,cAAc;MACdC,iBAAiB;MACjBI,QAAQ;MAACa;IACX,CAAC,GAAG,IAAI,CAACtB,KAAK;IACd,IAAGsB,IAAI,CAACK,SAAS,EAAC;MAChBL,IAAI,CAACM,WAAW,CAACM,KAAK,EAAE;MACxBZ,IAAI,CAACK,SAAS,GAAG,KAAK;MACtB,IAAI,CAACQ,QAAQ,CAAC;QAACb;MAAI,CAAC,CAAC;MACrB,IAAI,CAACa,QAAQ,CAAC;QACZ1B,QAAQ,EAAC;UACPC,SAAS,EAAC,IAAI;UACdC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE,KAAK;UACdC,QAAQ,EAAE,KAAK;UACfC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf;MACF,CAAC,CAAC;MACF;IACF;IACA,IAAGN,QAAQ,CAACE,MAAM,EAAC;MACjB,IAAGW,IAAI,CAACK,SAAS,EAAC,IAAI,CAACpC,QAAQ,EAAE;MACjC,IAAI,CAAC4C,QAAQ,CAAC;QACZ1B,QAAQ,EAAC;UACPC,SAAS,EAAC,IAAI;UACdC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE,KAAK;UACdC,QAAQ,EAAE,KAAK;UACfC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf;MACF,CAAC,CAAC;MACF;IACF;IAEA,IAAGN,QAAQ,CAACI,QAAQ,IAAIJ,QAAQ,CAACG,OAAO,IAAIH,QAAQ,CAACK,MAAM,IAAIL,QAAQ,CAACM,WAAW,EAAE;MACnF,IAAI,CAACoB,QAAQ,CAAC;QACZ1B,QAAQ,EAAC;UACPC,SAAS,EAAC,IAAI;UACdC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE,KAAK;UACdC,QAAQ,EAAE,KAAK;UACfC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf;MACF,CAAC,CAAC;MACF;IACF;IAEA,IAAGb,aAAa,IAAI,CAACC,iBAAiB,IAAI,CAACC,cAAc,EAAC;MACxDF,aAAa,GAAG,CAACA,aAAa;IAChC,CAAC,MAAK,IAAGA,aAAa,IAAIC,iBAAiB,IAAI,CAACC,cAAc,EAAC;MAC7DD,iBAAiB,GAAG,CAACA,iBAAiB;IACxC,CAAC,MAAK,IAAGD,aAAa,IAAI,CAACC,iBAAiB,IAAIC,cAAc,EAAC;MAC7DA,cAAc,GAAG,CAACA,cAAc;IAClC,CAAC,MAAI;MACHF,aAAa,GAAG,CAACA,aAAa;IAChC;IAEA,IAAG,CAACC,iBAAiB,IAAI,CAACC,cAAc,EAAC;MACvCC,iBAAiB,GAAG,IAAI;IAC1B;IAEA,IAAI,CAAC8B,QAAQ,CAAC;MACZjC,aAAa;MACbC,iBAAiB;MACjBC,cAAc;MACdC,iBAAiB;MAACiB;IACpB,CAAC,CAAC;EAEJ;EAEA5B,eAAe,GAAE;IACf,IAAI;MAACY,SAAS;MAAC8B;IAAc,CAAC,GAAG,IAAI,CAACpC,KAAK;IAC3C,IAAGM,SAAS,IAAE9B,UAAU,CAAC6D,UAAU,EAAC;MAClC/B,SAAS,GAAG9B,UAAU,CAAC+B,UAAU;MACjC6B,cAAc,GAAG,CAAC;IACpB,CAAC,MACI,IAAG9B,SAAS,IAAE9B,UAAU,CAAC+B,UAAU,EAAC;MACvCD,SAAS,GAAG9B,UAAU,CAAC8D,UAAU;MACjCF,cAAc,GAAG,CAAC;IACpB,CAAC,MACI,IAAG9B,SAAS,IAAE9B,UAAU,CAAC8D,UAAU,EAAC;MACvChC,SAAS,GAAG9B,UAAU,CAAC+D,UAAU;MACjCH,cAAc,GAAG,CAAC;IACpB,CAAC,MACI,IAAG9B,SAAS,IAAE9B,UAAU,CAAC+D,UAAU,EAAC;MACvCjC,SAAS,GAAG9B,UAAU,CAAC6D,UAAU;MACjCD,cAAc,GAAG,CAAC;IACpB;IACA,IAAI,CAACD,QAAQ,CAAC;MAAC7B,SAAS;MAAC8B;IAAc,CAAC,CAAC;EAC3C;EAEAI,WAAW,GAAE;IACXC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC9B;EACAT,QAAQ,GAAE;IACR,IAAIhC,WAAW,GAAG,CAAC;IACnB,IAAI0C,IAAI,GAAG,IAAI;IACf,IAAI,CAACvD,QAAQ,CAACI,IAAI,CAAC,IAAI,CAACN,UAAU,CAAC6C,OAAO,EAAE,IAAI,CAACzC,aAAa,EAAE,UAASsD,CAAC,EAAC;MACzE,IAAIC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;MAC1B,IAAGA,KAAK,IAAG,CAAC,IAAIA,KAAK,GAAE,EAAE,EAAC;QACxB5C,WAAW,GAAG,CAAC;MACjB,CAAC,MAAK,IAAG4C,KAAK,IAAE,EAAE,IAAIA,KAAK,GAAC,GAAG,EAAC;QAC9B5C,WAAW,GAAG,CAAC;MACjB,CAAC,MAAK,IAAG4C,KAAK,IAAE,GAAG,IAAIA,KAAK,GAAC,GAAG,EAAC;QAC/B5C,WAAW,GAAG,CAAC;MACjB,CAAC,MAAK,IAAG4C,KAAK,IAAE,GAAG,IAAIA,KAAK,GAAC,GAAG,EAAC;QAC/B5C,WAAW,GAAG,CAAC;MACjB,CAAC,MAAK,IAAG4C,KAAK,IAAE,CAAC,EAAE,IAAIA,KAAK,GAAC,CAAC,EAAC;QAC7B5C,WAAW,GAAG,CAAC;MACjB,CAAC,MAAK,IAAG4C,KAAK,IAAE,CAAC,GAAG,IAAIA,KAAK,GAAC,CAAC,EAAE,EAAC;QAChC5C,WAAW,GAAG,CAAC;MACjB,CAAC,MAAK,IAAG4C,KAAK,IAAE,CAAC,GAAG,IAAIA,KAAK,GAAC,CAAC,GAAG,EAAC;QACjC5C,WAAW,GAAG,CAAC;MACjB,CAAC,MAAK,IAAG4C,KAAK,IAAE,CAAC,GAAG,IAAIA,KAAK,GAAC,CAAC,GAAG,EAAC;QACjC5C,WAAW,GAAG,CAAC;MACjB;MACA0C,IAAI,CAACR,QAAQ,CAAC;QAAClC;MAAW,CAAC,CAAC;IAC9B,CAAC,CAAC;EACJ;EAEAN,QAAQ,GAAE;IACR,IAAI;MAAC2B;IAAI,CAAC,GAAG,IAAI,CAACtB,KAAK;IACvB,IAAI+C,UAAU,GAAG,IAAIC,KAAK,CAAC1B,IAAI,CAACC,SAAS,CAACD,IAAI,CAACG,SAAS,CAAC,CAAC;IAC1DsB,UAAU,CAACE,IAAI,EAAE;IACjB3B,IAAI,CAACK,SAAS,GAAG,IAAI;IACrBL,IAAI,CAACM,WAAW,GAAGmB,UAAU;IAC7B,IAAI,CAACZ,QAAQ,CAAC;MACZR,SAAS,EAAE,IAAI;MACflB,QAAQ,EAAC;QACPC,SAAS,EAAE,KAAK;QAChBC,MAAM,EAAE;MACV,CAAC;MACDW;IACF,CAAC,CAAC;EACJ;EAEAvB,WAAW,GAAE;IACX,IAAI,CAACoC,QAAQ,CAAC;MACZ1B,QAAQ,EAAC;QACPC,SAAS,EAAC,KAAK;QACfC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;MACf;IACF,CAAC,CAAC;EACJ;EAEAjB,UAAU,GAAE;IACV,IAAI,CAACqC,QAAQ,CAAC;MACZ1B,QAAQ,EAAC;QACPC,SAAS,EAAC,KAAK;QACfC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,IAAI;QACbC,QAAQ,EAAE,KAAK;QACfC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;MACf;IACF,CAAC,CAAC;EACJ;EAEAmC,QAAQ,GAAE;IACR,IAAI,CAACf,QAAQ,CAAC;MACZ1B,QAAQ,EAAC;QACPC,SAAS,EAAC,KAAK;QACfC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAE,KAAK;QACfC,MAAM,EAAE,IAAI;QACZC,WAAW,EAAE;MACf;IACF,CAAC,CAAC;EACJ;EAEAoC,aAAa,GAAE;IACb,IAAI,CAAChB,QAAQ,CAAC;MACZ1B,QAAQ,EAAC;QACPC,SAAS,EAAC,KAAK;QACfC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAE,KAAK;QACfC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;MACf;IACF,CAAC,CAAC;EACJ;EAEAxB,QAAQ,GAAE;IACR,IAAI;MACFU,WAAW;MACXC,aAAa;MACbC,iBAAiB;MACjBC,cAAc;MACdC,iBAAiB;MACjBI,QAAQ;MAACa;IACX,CAAC,GAAG,IAAI,CAACtB,KAAK;IACd,IAAGS,QAAQ,CAACE,MAAM,EAAC;MACjB,IAAGW,IAAI,CAACM,WAAW,EAAC;QAClB,IAAGN,IAAI,CAACM,WAAW,CAACwB,MAAM,EAAC;UACzB9B,IAAI,CAACM,WAAW,CAACqB,IAAI,EAAE;UACvB3B,IAAI,CAACK,SAAS,GAAG,IAAI;QACvB,CAAC,MAAI;UACHL,IAAI,CAACM,WAAW,CAACM,KAAK,EAAE;UACxBZ,IAAI,CAACK,SAAS,GAAG,KAAK;QACxB;QACA,IAAI,CAACQ,QAAQ,CAAC;UAACb;QAAI,CAAC,CAAC;QACrB;MACF;IACF;IACA,IAAGpB,aAAa,EAAC;MACf,IAAGC,iBAAiB,EAAC;QACnB,IAAGF,WAAW,IAAE,CAAC,EAAC;UAChB,IAAI,CAACP,eAAe,EAAE;UACtB,IAAI,CAACyC,QAAQ,CAAC;YACZjC,aAAa;YACbC,iBAAiB;YACjBC,cAAc;YACdC;UACF,CAAC,CAAC;UACF;QACF;QACA,IAAGJ,WAAW,IAAE,CAAC,EAAC;UAChB,IAAI,CAACuC,WAAW,EAAE;UAClB,IAAI,CAACL,QAAQ,CAAC;YACZjC,aAAa;YACbC,iBAAiB;YACjBC,cAAc;YACdC;UACF,CAAC,CAAC;UACF;QACF;MACF;MAEA,IAAGD,cAAc,EAAC;QAChB,IAAGH,WAAW,IAAE,CAAC,EAAC;UAChBC,aAAa,GAAG,CAACA,aAAa;UAC9BE,cAAc,GAAG,CAACA,cAAc;UAChC,IAAI,CAACT,QAAQ,EAAE;UACf,IAAI,CAACwC,QAAQ,CAAC;YACZjC,aAAa;YACbC,iBAAiB;YACjBC,cAAc;YACdC;UACF,CAAC,CAAC;UACF;QACF,CAAC,MACI,IAAGJ,WAAW,IAAE,CAAC,EAAC;UACrBC,aAAa,GAAG,CAACA,aAAa;UAC9BE,cAAc,GAAG,CAACA,cAAc;UAChC,IAAI,CAACL,WAAW,EAAE;UAClB,IAAI,CAACoC,QAAQ,CAAC;YACZjC,aAAa;YACbC,iBAAiB;YACjBC,cAAc;YACdC;UACF,CAAC,CAAC;UACF;QACF,CAAC,MACI,IAAGJ,WAAW,IAAE,CAAC,EAAC;UACrBC,aAAa,GAAG,CAACA,aAAa;UAC9BE,cAAc,GAAG,CAACA,cAAc;UAChC,IAAI,CAACN,UAAU,EAAE;UACjB,IAAI,CAACqC,QAAQ,CAAC;YACZjC,aAAa;YACbC,iBAAiB;YACjBC,cAAc;YACdC;UACF,CAAC,CAAC;UACF;QACF;MACF;MAEA,IAAGJ,WAAW,IAAE,CAAC,EAAC;QAChB,IAAG,CAACE,iBAAiB,EAAC;UACpBA,iBAAiB,GAAG,CAACA,iBAAiB;QACxC;MACF,CAAC,MACI,IAAGF,WAAW,IAAG,CAAC,EAAC;QACtB,IAAG,CAACG,cAAc,EAAC;UACjBA,cAAc,GAAG,CAACA,cAAc;QAClC;MACF,CAAC,MACI,IAAGH,WAAW,IAAG,CAAC,EAAC;QACtBC,aAAa,GAAG,CAACA,aAAa;QAC9BG,iBAAiB,GAAG,IAAI;QACxB,IAAI,CAAC6C,QAAQ,EAAE;QACf,IAAI,CAACf,QAAQ,CAAC;UACZjC,aAAa;UACbC,iBAAiB;UACjBC,cAAc;UACdC;QACF,CAAC,CAAC;MACJ,CAAC,MAEI,IAAGJ,WAAW,IAAE,CAAC,EAAC;QACrBC,aAAa,GAAG,CAACA,aAAa;QAC9B,IAAI,CAACiD,aAAa,EAAE;QACpB,IAAI,CAAChB,QAAQ,CAAC;UACZjC,aAAa;UACbC,iBAAiB;UACjBC,cAAc;UACdC;QACF,CAAC,CAAC;MACJ;IACF,CAAC,MAAI;MACHH,aAAa,GAAG,KAAK;IACvB;IACA,IAAGC,iBAAiB,IAAIC,cAAc,EAAC;MACrCC,iBAAiB,GAAG,KAAK;IAC3B;IACA,IAAI,CAAC8B,QAAQ,CAAC;MACZjC,aAAa;MACbC,iBAAiB;MACjBC,cAAc;MACdC;IACF,CAAC,CAAC;EACJ;EAEAT,OAAO,GAAE;IACP,IAAI;MAACa,QAAQ;MAACa,IAAI;MAACN,MAAM;MAACI;IAAO,CAAC,GAAG,IAAI,CAACpB,KAAK;IAC/C,IAAGS,QAAQ,CAACE,MAAM,EAAC;MACjBW,IAAI,CAACG,SAAS,EAAE;MAChBH,IAAI,CAACG,SAAS,GAAGH,IAAI,CAACG,SAAS,GAAEH,IAAI,CAACC,SAAS,CAAC8B,MAAM;MACtD,IAAG/B,IAAI,CAACM,WAAW,EAACN,IAAI,CAACM,WAAW,CAACM,KAAK,EAAE;MAC5C,IAAI,CAACvC,QAAQ,EAAE;IACjB,CAAC,MAAK,IAAGc,QAAQ,CAACG,OAAO,EAAC;MACxBI,MAAM,CAACG,UAAU,EAAE;MACnBH,MAAM,CAACG,UAAU,GAAGH,MAAM,CAACG,UAAU,GAAEH,MAAM,CAACC,IAAI,CAACoC,MAAM;MACzD,IAAI,CAACvD,UAAU,EAAE;IACnB,CAAC,MAAK,IAAGW,QAAQ,CAACI,QAAQ,EAAC;MACzBO,OAAO,CAACC,WAAW,EAAE;MACrBD,OAAO,CAACC,WAAW,GAAGD,OAAO,CAACC,WAAW,GAAED,OAAO,CAACH,IAAI,CAACoC,MAAM;MAC9D,IAAI,CAACtD,WAAW,EAAE;IACpB;EAEF;EACAF,QAAQ,GAAE;IACR,IAAI;MAACY,QAAQ;MAACa,IAAI;MAACN,MAAM;MAACI;IAAO,CAAC,GAAG,IAAI,CAACpB,KAAK;IAC/C,IAAGS,QAAQ,CAACE,MAAM,EAAC;MACjBW,IAAI,CAACG,SAAS,EAAE;MAChB,IAAGH,IAAI,CAACG,SAAS,GAAC,CAAC,EAACH,IAAI,CAACG,SAAS,GAAEH,IAAI,CAACC,SAAS,CAAC8B,MAAM,GAAC,CAAC;MAC3D,IAAG/B,IAAI,CAACM,WAAW,EAACN,IAAI,CAACM,WAAW,CAACM,KAAK,EAAE;MAC5C,IAAI,CAACvC,QAAQ,EAAE;IACjB,CAAC,MAAK,IAAGc,QAAQ,CAACG,OAAO,EAAC;MACxBI,MAAM,CAACG,UAAU,EAAE;MACnB,IAAGH,MAAM,CAACG,UAAU,GAAC,CAAC,EAACH,MAAM,CAACG,UAAU,GAAGH,MAAM,CAACC,IAAI,CAACoC,MAAM,GAAC,CAAC;MAC/D,IAAI,CAACvD,UAAU,EAAE;IACnB,CAAC,MAAK,IAAGW,QAAQ,CAACI,QAAQ,EAAC;MACzBO,OAAO,CAACC,WAAW,EAAE;MACrB,IAAGD,OAAO,CAACC,WAAW,GAAC,CAAC,EAACD,OAAO,CAACC,WAAW,GAAGD,OAAO,CAACH,IAAI,CAACoC,MAAM,GAAC,CAAC;MACpE,IAAI,CAACtD,WAAW,EAAE;IACpB;EACF;EAEAuD,MAAM,GAAE;IACJ,IAAI;MACFrD,WAAW;MACXC,aAAa;MACbC,iBAAiB;MACjBC,cAAc;MACdC,iBAAiB;MACjBC,SAAS;MAACG,QAAQ;MAACa,IAAI;MAACN,MAAM;MAACI;IACjC,CAAC,GAAG,IAAI,CAACpB,KAAK;IACd,oBACE;MAAA,wBACA;QAAK,SAAS,EAAC,YAAY;QAAA,uBACzB;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAmC,eACnC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAwD,eACxD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA4F;QAAA;UAAA;UAAA;UAAA;QAAA;MACzF;QAAA;QAAA;QAAA;MAAA,QACD,eACN;QAAK,SAAS,EAAC,KAAK;QAAA,wBAClB,QAAC,UAAU;UAAC,WAAW,EAAEC,WAAY;UACpC,aAAa,EAAEC,aAAc;UAC7B,iBAAiB,EAAEC,iBAAkB;UACrC,cAAc,EAAEC,cAAe;UAC/B,iBAAiB,EAAEC,iBAAkB;UACrC,SAAS,EAAEC,SAAU;UACrB,QAAQ,EAAIG,QAAS;UACrB,IAAI,EAAEa,IAAK;UACX,MAAM,EAAEN,MAAO;UACf,OAAO,EAAEI;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAE,eACpB,QAAC,UAAU;UAAC,UAAU,EAAE,IAAI,CAAClC,UAAW;UACxC,QAAQ,EAAE,IAAI,CAACK,QAAS;UACxB,SAAS,EAAE,IAAI,CAACE,SAAU;UAC1B,aAAa,EAAE,IAAI,CAACG,OAAQ;UAC5B,cAAc,EAAE,IAAI,CAACC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5B;IAAA,gBACH;EAET;AACF;AAEA,eAAed,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}